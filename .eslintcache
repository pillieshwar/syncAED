[{"C:\\NewPowerGrid\\syncAED\\src\\index.js":"1","C:\\NewPowerGrid\\syncAED\\src\\App.js":"2","C:\\NewPowerGrid\\syncAED\\src\\reportWebVitals.js":"3","C:\\NewPowerGrid\\syncAED\\src\\components\\home.js":"4","C:\\NewPowerGrid\\syncAED\\src\\components\\eventRootCauseAnalysis.js":"5","C:\\NewPowerGrid\\syncAED\\src\\components\\eventDetection.js":"6","C:\\NewPowerGrid\\syncAED\\src\\components\\anomalyDetection.js":"7","C:\\NewPowerGrid\\syncAED\\src\\components\\header.js":"8","C:\\NewPowerGrid\\syncAED\\src\\components\\eventClassification.js":"9","C:\\NewPowerGrid\\syncAED\\src\\components\\GlobalStyles.js":"10","C:\\NewPowerGrid\\syncAED\\src\\theme\\index.js":"11","C:\\NewPowerGrid\\syncAED\\src\\components\\mapsLocalization.js":"12","C:\\NewPowerGrid\\syncAED\\src\\components\\maps.js":"13","C:\\NewPowerGrid\\syncAED\\src\\data\\eventData.js":"14","C:\\NewPowerGrid\\syncAED\\src\\components\\mapsClassification.js":"15","C:\\NewPowerGrid\\syncAED\\src\\components\\anomalyMap.js":"16","C:\\NewPowerGrid\\syncAED\\src\\theme\\typography.js":"17","C:\\NewPowerGrid\\syncAED\\src\\theme\\shadows.js":"18"},{"size":552,"mtime":1625615857343,"results":"19","hashOfConfig":"20"},{"size":14540,"mtime":1627585509430,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1625615857344,"results":"22","hashOfConfig":"20"},{"size":26741,"mtime":1627604867791,"results":"23","hashOfConfig":"20"},{"size":14315,"mtime":1627605135028,"results":"24","hashOfConfig":"20"},{"size":18272,"mtime":1627604905738,"results":"25","hashOfConfig":"20"},{"size":21539,"mtime":1627600506651,"results":"26","hashOfConfig":"20"},{"size":2427,"mtime":1626570096250,"results":"27","hashOfConfig":"20"},{"size":16018,"mtime":1627605012163,"results":"28","hashOfConfig":"20"},{"size":1028,"mtime":1625615857333,"results":"29","hashOfConfig":"20"},{"size":691,"mtime":1627585509408,"results":"30","hashOfConfig":"20"},{"size":5667,"mtime":1627585509408,"results":"31","hashOfConfig":"20"},{"size":3163,"mtime":1627585509408,"results":"32","hashOfConfig":"20"},{"size":1677,"mtime":1625615857342,"results":"33","hashOfConfig":"20"},{"size":4945,"mtime":1627585509408,"results":"34","hashOfConfig":"20"},{"size":4096,"mtime":1627585509408,"results":"35","hashOfConfig":"20"},{"size":587,"mtime":1625615857347,"results":"36","hashOfConfig":"20"},{"size":1646,"mtime":1625615857347,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"18ev9kx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"C:\\NewPowerGrid\\syncAED\\src\\index.js",[],["82","83"],"C:\\NewPowerGrid\\syncAED\\src\\App.js",[],"C:\\NewPowerGrid\\syncAED\\src\\reportWebVitals.js",[],"C:\\NewPowerGrid\\syncAED\\src\\components\\home.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"C:\\NewPowerGrid\\syncAED\\src\\components\\eventRootCauseAnalysis.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"C:\\NewPowerGrid\\syncAED\\src\\components\\eventDetection.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"C:\\NewPowerGrid\\syncAED\\src\\components\\anomalyDetection.js",["136","137","138","139","140","141","142","143","144","145","146"],"C:\\NewPowerGrid\\syncAED\\src\\components\\header.js",[],["147","148"],"C:\\NewPowerGrid\\syncAED\\src\\components\\eventClassification.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"C:\\NewPowerGrid\\syncAED\\src\\components\\GlobalStyles.js",[],"C:\\NewPowerGrid\\syncAED\\src\\theme\\index.js",[],"C:\\NewPowerGrid\\syncAED\\src\\components\\mapsLocalization.js",["169","170"],"import \"./../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  MapContainer as LeafletMap,\r\n  MapContainer,\r\n  TileLayer,\r\n  CircleMarker,\r\n  Polyline,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport axios from \"axios\";\r\n\r\nlet API_URL = \"http://127.0.0.1:9002/main_mapdata\";\r\nlet MAP_EDGES = \"http://127.0.0.1:9002/map_edges\";\r\n\r\nclass MapsLocalization extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map_data: [],\r\n      map_edges: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    const data = axios.get(API_URL);\r\n    data.then((res) => this.setState({ map_data: res.data || [] }));\r\n    const edgeData = axios.get(MAP_EDGES);\r\n    edgeData.then((res) => this.setState({ map_edges: res.data || [] }));\r\n  }\r\n\r\n  render() {\r\n    const center = [47.1, -119.6920787];\r\n    const blueOptions = { color: \"blue\" };\r\n    const greenOptions = {\r\n      animation: \"fade 1s infinite alternate\",\r\n      color: \"green\",\r\n    };\r\n    const redOptions = {\r\n      animation: \"fade 1s infinite alternate\",\r\n      color: \"red\",\r\n    };\r\n    const yellowOptions = {\r\n      animation: \"fade 1s infinite alternate\",\r\n      color: \"orange\",\r\n    };\r\n\r\n    return (\r\n      <MapContainer\r\n        style={{\r\n          marginTop: \"-0.4rem\",\r\n          marginLeft: \"0.4rem\",\r\n          border: \"solid\",\r\n          width: \"37rem\",\r\n          height: \"24rem\",\r\n        }}\r\n        center={center}\r\n        zoom={6}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n\r\n        \r\n        {this.state.map_edges.length > 0 ? (\r\n                  this.state.map_edges.map((medge) => (\r\n                    <Polyline\r\n                      pathOptions={blueOptions}\r\n                      positions={[\r\n                        [medge.from_latitude, medge.from_longitude],\r\n                        [medge.to_latitude, medge.to_longitude],\r\n                      ]}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <td>Loading...</td>\r\n                )}\r\n\r\n\r\n        {this.state.map_data.length > 0 ? (\r\n          this.state.map_data.map((mdata) => {\r\n            console.log(\"1,2 : \", this.props.mapnodebusid1, this.props.mapnodebusid2)\r\n            if (mdata.bus_id === this.props.mapnodebusid1)\r\n              {\r\n                return(\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                pathOptions={redOptions}\r\n                fillOpacity={1.1}\r\n                radius={20}\r\n                // className=\"blinking-circle-red\"\r\n                // stroke={false}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n                )}\r\n            else if (mdata.bus_id === this.props.mapnodebusid2)\r\n            {\r\n              return(\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                pathOptions={yellowOptions}\r\n                fillOpacity={1.1}\r\n                radius={20}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n              )}\r\n              else{\r\n                return(\r\n                  <CircleMarker\r\n                  center={[mdata.latitude, mdata.longitude]}\r\n                  pathOptions={blueOptions}\r\n                  radius={10}\r\n                >\r\n                  <Popup>\r\n                    Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                    <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                    {mdata.longitude}\r\n                  </Popup>\r\n                </CircleMarker>\r\n                )\r\n              }\r\n          })\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n\r\n{this.state.map_data.length > 0 ? (\r\n          this.state.map_data.map((mdata) => {\r\n            return mdata.bus_status>0 ? (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                // pathOptions={greenOptions}\r\n                fillOpacity={1}\r\n                radius={16}\r\n                className=\"blinking-circle\"\r\n                // stroke={false}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            ) : (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                pathOptions={blueOptions}\r\n                radius={10}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            );\r\n          })\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n      </MapContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapsLocalization;\r\n","C:\\NewPowerGrid\\syncAED\\src\\components\\maps.js",["171"],"import React, { Component } from \"react\";\r\nimport {\r\n  MapContainer,\r\n  CircleMarker,\r\n  Polyline,\r\n  TileLayer,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport axios from \"axios\";\r\n// import blinking from \"../App.css\";\r\nlet API_URL = \"http://127.0.0.1:9002/main_mapdata\";\r\nlet MAP_EDGES = \"http://127.0.0.1:9002/map_edges\";\r\n\r\nclass Maps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map_data: [],\r\n      map_edges: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    const data = axios.get(API_URL);\r\n    data.then((res) => this.setState({ map_data: res.data || [] }));\r\n    const edgeData = axios.get(MAP_EDGES);\r\n    edgeData.then((res) => this.setState({ map_edges: res.data || [] }));\r\n  }\r\n\r\n  render() {\r\n    const center = [47.1, -119.6920787];\r\n    const blueOptions = { color: \"blue\" };\r\n    const greenOptions = {\r\n      // animation: \"fade 1s infinite alternate\",\r\n      color: \"green\",\r\n    };\r\n\r\n    return (\r\n      <MapContainer\r\n        className=\"map\"\r\n        style={{\r\n          marginTop: \"-0.2rem\",\r\n          marginLeft: \"1px\",\r\n          border: \"solid\",\r\n          width: \"43rem\",\r\n          height: \"38rem\",\r\n        }}\r\n        center={center}\r\n        zoom={7}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {this.state.map_edges.length > 0 ? (\r\n          this.state.map_edges.map((medge) => (\r\n            <Polyline\r\n              pathOptions={blueOptions}\r\n              positions={[\r\n                [medge.from_latitude, medge.from_longitude],\r\n                [medge.to_latitude, medge.to_longitude],\r\n              ]}\r\n            />\r\n          ))\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n\r\n        {this.state.map_data.length > 0 ? (\r\n          this.state.map_data.map((mdata) => {\r\n            return mdata.bus_status > 0 ? (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                fillOpacity={1}\r\n                radius={16}\r\n                className=\"blinking-circle\"\r\n                // stroke={false}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            ) : (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                pathOptions={blueOptions}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            );\r\n          })\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n      </MapContainer>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Maps;\r\n","C:\\NewPowerGrid\\syncAED\\src\\data\\eventData.js",[],"C:\\NewPowerGrid\\syncAED\\src\\components\\mapsClassification.js",["172","173","174"],"import \"./../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  MapContainer as LeafletMap,\r\n  MapContainer,\r\n  TileLayer,\r\n  CircleMarker,\r\n  Polyline,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\n\r\nlet API_URL = \"http://127.0.0.1:9002/main_mapdata\";\r\nlet MAP_EDGES = \"http://127.0.0.1:9002/map_edges\";\r\n\r\nclass MapsClassification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map_data: [],\r\n      map_edges: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    const data = axios.get(API_URL);\r\n    data.then((res) => this.setState({ map_data: res.data || [] }));\r\n    const edgeData = axios.get(MAP_EDGES);\r\n    edgeData.then((res) => this.setState({ map_edges: res.data || [] }));\r\n  }\r\n\r\n  render() {\r\n    const center = [47.1, -119.6920787];\r\n    const blueOptions = { color: \"blue\" };\r\n    const greenOptions = {\r\n      animation: \"fade 1s infinite alternate\",\r\n      color: \"green\",\r\n    };\r\n    const redOptions = {\r\n      animation: \"fade 1s infinite alternate\",\r\n      color: \"red\",\r\n    };\r\n\r\n    return (\r\n      <MapContainer\r\n        style={{\r\n          marginTop: \"-0.4rem\",\r\n          marginLeft: \"0.4rem\",\r\n          border: \"solid\",\r\n          width: \"44rem\",\r\n          height: \"37rem\",\r\n        }}\r\n        center={center}\r\n        zoom={6}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n        {this.state.map_edges.length > 0 ? (\r\n                  this.state.map_edges.map((medge) => (\r\n                    <Polyline\r\n                      pathOptions={blueOptions}\r\n                      positions={[\r\n                        [medge.from_latitude, medge.from_longitude],\r\n                        [medge.to_latitude, medge.to_longitude],\r\n                      ]}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <td>Loading...</td>\r\n                )}\r\n\r\n\r\n        \r\n\r\n        {this.state.map_data.length > 0 ? (\r\n          this.state.map_data.map((mdata) => {\r\n            if(mdata.bus_id === this.props.mapnodebusid){\r\n              console.log(\"matched \",this.props.mapnodebusid)\r\n              console.log(mdata.bus_id)\r\n              return(\r\n                <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                pathOptions={redOptions}\r\n                fillOpacity={1}\r\n                radius={20}\r\n                // className=\"blinking-circle-red\"\r\n                // stroke={false}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n              )\r\n            } else{\r\n              console.log(\"not \",this.props.mapnodebusid)\r\n              console.log(mdata.bus_id)\r\nreturn (\r\n  <CircleMarker\r\n    center={[mdata.latitude, mdata.longitude]}\r\n    pathOptions={blueOptions}\r\n    fillOpacity={0.1}\r\n                radius={10}\r\n  >\r\n    <Popup>\r\n      Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n      <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n      {mdata.longitude}\r\n    </Popup>\r\n  </CircleMarker>\r\n)\r\n            } ;\r\n          })\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n\r\n{this.state.map_data.length > 0 ? (\r\n          this.state.map_data.map((mdata) => {\r\n            return mdata.bus_status>0 ? (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                // pathOptions={greenOptions}\r\n                fillOpacity={1}\r\n                radius={16}\r\n                className=\"blinking-circle\"\r\n                // stroke={false}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            ) : (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                pathOptions={blueOptions}\r\n                \r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            );\r\n          })\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n      </MapContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapsClassification;\r\n","C:\\NewPowerGrid\\syncAED\\src\\components\\anomalyMap.js",["175","176"],"import \"./../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  MapContainer as LeafletMap,\r\n  MapContainer,\r\n  TileLayer,\r\n  CircleMarker,\r\n  Polyline,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport axios from \"axios\";\r\n\r\nlet API_URL = \"http://127.0.0.1:9002/main_mapdata\";\r\nlet MAP_EDGES = \"http://127.0.0.1:9002/map_edges\";\r\n\r\nclass AnomalyMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map_data: [],\r\n      map_edges: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    const data = axios.get(API_URL);\r\n    data.then((res) => this.setState({ map_data: res.data || [] }));\r\n    const edgeData = axios.get(MAP_EDGES);\r\n    edgeData.then((res) => this.setState({ map_edges: res.data || [] }));\r\n  }\r\n\r\n  render() {\r\n    const center = [47.1, -119.6920787];\r\n    const blueOptions = { color: \"blue\" };\r\n    const greenOptions = {\r\n      animation: \"fade 1s infinite alternate\",\r\n      color: \"green\",\r\n    };\r\n\r\n    return (\r\n      <MapContainer\r\n        style={{\r\n          marginTop: \"-0.4rem\",\r\n          border: \"solid\",\r\n          width: \"51rem\",\r\n          height: \"14rem\",\r\n        }}\r\n        center={center}\r\n        zoom={6}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n        {this.state.map_edges.length > 0 ? (\r\n                  this.state.map_edges.map((medge) => (\r\n                    <Polyline\r\n                      pathOptions={blueOptions}\r\n                      positions={[\r\n                        [medge.from_latitude, medge.from_longitude],\r\n                        [medge.to_latitude, medge.to_longitude],\r\n                      ]}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <td>Loading...</td>\r\n                )}\r\n\r\n\r\n        {this.state.map_data.length > 0 ? (\r\n          this.state.map_data.map((mdata) => {\r\n            return mdata.bus_status>0 ? (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                // pathOptions={greenOptions}\r\n                fillOpacity={1}\r\n                radius={16}\r\n                className=\"blinking-circle\"\r\n                // stroke={false}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            ) : (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                pathOptions={blueOptions}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            );\r\n          })\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n\r\n{this.state.map_data.length > 0 ? (\r\n          this.state.map_data.map((mdata) => {\r\n            return mdata.bus_id === \"BUSID_02\" ? (\r\n              <CircleMarker\r\n                center={[mdata.latitude, mdata.longitude]}\r\n                // pathOptions={greenOptions}\r\n                fillOpacity={1}\r\n                radius={16}\r\n                className=\"blinking-circle-red\"\r\n                // stroke={false}\r\n              >\r\n                <Popup>\r\n                  Bus ID : {mdata.bus_id} <br></br> Bus Name : {mdata.bus_name}\r\n                  <br></br> Lat : {mdata.latitude} <br></br> Lon :\r\n                  {mdata.longitude}\r\n                </Popup>\r\n              </CircleMarker>\r\n            ) : (console.log(\"none\"));\r\n          })\r\n        ) : (\r\n          <td>Loading...</td>\r\n        )}\r\n      </MapContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnomalyMap;\r\n","C:\\NewPowerGrid\\syncAED\\src\\theme\\typography.js",["177"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n","C:\\NewPowerGrid\\syncAED\\src\\theme\\shadows.js",["178"],"export default [\r\n  \"none\",\r\n  \"0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)\",\r\n];\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":12},{"ruleId":"183","severity":1,"message":"187","line":8,"column":3,"nodeType":"185","messageId":"186","endLine":8,"endColumn":7},{"ruleId":"183","severity":1,"message":"188","line":9,"column":3,"nodeType":"185","messageId":"186","endLine":9,"endColumn":16},{"ruleId":"183","severity":1,"message":"189","line":10,"column":3,"nodeType":"185","messageId":"186","endLine":10,"endColumn":8},{"ruleId":"183","severity":1,"message":"190","line":11,"column":3,"nodeType":"185","messageId":"186","endLine":11,"endColumn":8},{"ruleId":"183","severity":1,"message":"191","line":12,"column":3,"nodeType":"185","messageId":"186","endLine":12,"endColumn":10},{"ruleId":"183","severity":1,"message":"192","line":13,"column":3,"nodeType":"185","messageId":"186","endLine":13,"endColumn":9},{"ruleId":"183","severity":1,"message":"193","line":16,"column":8,"nodeType":"185","messageId":"186","endLine":16,"endColumn":18},{"ruleId":"183","severity":1,"message":"194","line":17,"column":31,"nodeType":"185","messageId":"186","endLine":17,"endColumn":34},{"ruleId":"183","severity":1,"message":"195","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":22},{"ruleId":"183","severity":1,"message":"196","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":30},{"ruleId":"183","severity":1,"message":"197","line":22,"column":10,"nodeType":"185","messageId":"186","endLine":22,"endColumn":24},{"ruleId":"183","severity":1,"message":"198","line":22,"column":26,"nodeType":"185","messageId":"186","endLine":22,"endColumn":32},{"ruleId":"183","severity":1,"message":"199","line":23,"column":22,"nodeType":"185","messageId":"186","endLine":23,"endColumn":32},{"ruleId":"183","severity":1,"message":"200","line":29,"column":8,"nodeType":"185","messageId":"186","endLine":29,"endColumn":13},{"ruleId":"183","severity":1,"message":"201","line":154,"column":11,"nodeType":"185","messageId":"186","endLine":154,"endColumn":25},{"ruleId":"183","severity":1,"message":"202","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"203","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":18},{"ruleId":"183","severity":1,"message":"204","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":11,"column":3,"nodeType":"185","messageId":"186","endLine":11,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"194","line":19,"column":31,"nodeType":"185","messageId":"186","endLine":19,"endColumn":34},{"ruleId":"183","severity":1,"message":"196","line":21,"column":10,"nodeType":"185","messageId":"186","endLine":21,"endColumn":30},{"ruleId":"183","severity":1,"message":"197","line":24,"column":10,"nodeType":"185","messageId":"186","endLine":24,"endColumn":24},{"ruleId":"183","severity":1,"message":"199","line":25,"column":22,"nodeType":"185","messageId":"186","endLine":25,"endColumn":32},{"ruleId":"183","severity":1,"message":"201","line":105,"column":11,"nodeType":"185","messageId":"186","endLine":105,"endColumn":25},{"ruleId":"183","severity":1,"message":"205","line":113,"column":11,"nodeType":"185","messageId":"186","endLine":113,"endColumn":26},{"ruleId":"183","severity":1,"message":"206","line":130,"column":11,"nodeType":"185","messageId":"186","endLine":130,"endColumn":27},{"ruleId":"183","severity":1,"message":"207","line":147,"column":11,"nodeType":"185","messageId":"186","endLine":147,"endColumn":27},{"ruleId":"183","severity":1,"message":"208","line":164,"column":11,"nodeType":"185","messageId":"186","endLine":164,"endColumn":27},{"ruleId":"183","severity":1,"message":"209","line":181,"column":11,"nodeType":"185","messageId":"186","endLine":181,"endColumn":27},{"ruleId":"183","severity":1,"message":"210","line":198,"column":11,"nodeType":"185","messageId":"186","endLine":198,"endColumn":27},{"ruleId":"183","severity":1,"message":"211","line":222,"column":11,"nodeType":"185","messageId":"186","endLine":222,"endColumn":26},{"ruleId":"183","severity":1,"message":"212","line":226,"column":11,"nodeType":"185","messageId":"186","endLine":226,"endColumn":19},{"ruleId":"183","severity":1,"message":"202","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"203","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":18},{"ruleId":"183","severity":1,"message":"204","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":11,"column":3,"nodeType":"185","messageId":"186","endLine":11,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"213","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":21},{"ruleId":"183","severity":1,"message":"214","line":19,"column":23,"nodeType":"185","messageId":"186","endLine":19,"endColumn":29},{"ruleId":"183","severity":1,"message":"194","line":19,"column":31,"nodeType":"185","messageId":"186","endLine":19,"endColumn":34},{"ruleId":"183","severity":1,"message":"196","line":21,"column":10,"nodeType":"185","messageId":"186","endLine":21,"endColumn":30},{"ruleId":"183","severity":1,"message":"197","line":24,"column":10,"nodeType":"185","messageId":"186","endLine":24,"endColumn":24},{"ruleId":"183","severity":1,"message":"199","line":25,"column":22,"nodeType":"185","messageId":"186","endLine":25,"endColumn":32},{"ruleId":"183","severity":1,"message":"201","line":115,"column":11,"nodeType":"185","messageId":"186","endLine":115,"endColumn":25},{"ruleId":"183","severity":1,"message":"205","line":123,"column":11,"nodeType":"185","messageId":"186","endLine":123,"endColumn":26},{"ruleId":"183","severity":1,"message":"207","line":157,"column":11,"nodeType":"185","messageId":"186","endLine":157,"endColumn":27},{"ruleId":"183","severity":1,"message":"209","line":191,"column":11,"nodeType":"185","messageId":"186","endLine":191,"endColumn":27},{"ruleId":"183","severity":1,"message":"210","line":208,"column":11,"nodeType":"185","messageId":"186","endLine":208,"endColumn":27},{"ruleId":"183","severity":1,"message":"211","line":232,"column":11,"nodeType":"185","messageId":"186","endLine":232,"endColumn":26},{"ruleId":"183","severity":1,"message":"212","line":236,"column":11,"nodeType":"185","messageId":"186","endLine":236,"endColumn":19},{"ruleId":"183","severity":1,"message":"202","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"203","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":18},{"ruleId":"183","severity":1,"message":"204","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":11,"column":3,"nodeType":"185","messageId":"186","endLine":11,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"194","line":19,"column":31,"nodeType":"185","messageId":"186","endLine":19,"endColumn":34},{"ruleId":"183","severity":1,"message":"196","line":21,"column":10,"nodeType":"185","messageId":"186","endLine":21,"endColumn":30},{"ruleId":"183","severity":1,"message":"197","line":24,"column":10,"nodeType":"185","messageId":"186","endLine":24,"endColumn":24},{"ruleId":"183","severity":1,"message":"199","line":25,"column":22,"nodeType":"185","messageId":"186","endLine":25,"endColumn":32},{"ruleId":"183","severity":1,"message":"201","line":105,"column":11,"nodeType":"185","messageId":"186","endLine":105,"endColumn":25},{"ruleId":"183","severity":1,"message":"212","line":226,"column":11,"nodeType":"185","messageId":"186","endLine":226,"endColumn":19},{"ruleId":"179","replacedBy":"215"},{"ruleId":"181","replacedBy":"216"},{"ruleId":"183","severity":1,"message":"202","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"203","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":18},{"ruleId":"183","severity":1,"message":"204","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":11,"column":3,"nodeType":"185","messageId":"186","endLine":11,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"213","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":21},{"ruleId":"183","severity":1,"message":"214","line":19,"column":23,"nodeType":"185","messageId":"186","endLine":19,"endColumn":29},{"ruleId":"183","severity":1,"message":"194","line":19,"column":31,"nodeType":"185","messageId":"186","endLine":19,"endColumn":34},{"ruleId":"183","severity":1,"message":"196","line":21,"column":10,"nodeType":"185","messageId":"186","endLine":21,"endColumn":30},{"ruleId":"183","severity":1,"message":"197","line":24,"column":10,"nodeType":"185","messageId":"186","endLine":24,"endColumn":24},{"ruleId":"183","severity":1,"message":"199","line":25,"column":22,"nodeType":"185","messageId":"186","endLine":25,"endColumn":32},{"ruleId":"183","severity":1,"message":"201","line":112,"column":11,"nodeType":"185","messageId":"186","endLine":112,"endColumn":25},{"ruleId":"183","severity":1,"message":"205","line":120,"column":11,"nodeType":"185","messageId":"186","endLine":120,"endColumn":26},{"ruleId":"183","severity":1,"message":"206","line":137,"column":11,"nodeType":"185","messageId":"186","endLine":137,"endColumn":27},{"ruleId":"183","severity":1,"message":"207","line":154,"column":11,"nodeType":"185","messageId":"186","endLine":154,"endColumn":27},{"ruleId":"183","severity":1,"message":"208","line":171,"column":11,"nodeType":"185","messageId":"186","endLine":171,"endColumn":27},{"ruleId":"183","severity":1,"message":"209","line":188,"column":11,"nodeType":"185","messageId":"186","endLine":188,"endColumn":27},{"ruleId":"183","severity":1,"message":"210","line":205,"column":11,"nodeType":"185","messageId":"186","endLine":205,"endColumn":27},{"ruleId":"183","severity":1,"message":"211","line":229,"column":11,"nodeType":"185","messageId":"186","endLine":229,"endColumn":26},{"ruleId":"183","severity":1,"message":"212","line":233,"column":11,"nodeType":"185","messageId":"186","endLine":233,"endColumn":19},{"ruleId":"183","severity":1,"message":"217","line":4,"column":19,"nodeType":"185","messageId":"186","endLine":4,"endColumn":29},{"ruleId":"183","severity":1,"message":"218","line":36,"column":11,"nodeType":"185","messageId":"186","endLine":36,"endColumn":23},{"ruleId":"183","severity":1,"message":"218","line":34,"column":11,"nodeType":"185","messageId":"186","endLine":34,"endColumn":23},{"ruleId":"183","severity":1,"message":"217","line":4,"column":19,"nodeType":"185","messageId":"186","endLine":4,"endColumn":29},{"ruleId":"183","severity":1,"message":"219","line":12,"column":10,"nodeType":"185","messageId":"186","endLine":12,"endColumn":26},{"ruleId":"183","severity":1,"message":"218","line":37,"column":11,"nodeType":"185","messageId":"186","endLine":37,"endColumn":23},{"ruleId":"183","severity":1,"message":"217","line":4,"column":19,"nodeType":"185","messageId":"186","endLine":4,"endColumn":29},{"ruleId":"183","severity":1,"message":"218","line":36,"column":11,"nodeType":"185","messageId":"186","endLine":36,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":35,"endColumn":3},{"ruleId":"220","severity":1,"message":"223","line":1,"column":1,"nodeType":"222","endLine":27,"endColumn":3},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'LineChart' is defined but never used.","Identifier","unusedVar","'Line' is defined but never used.","'CartesianGrid' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Tooltip' is defined but never used.","'Legend' is defined but never used.","'chart_back' is defined but never used.","'Fab' is defined but never used.","'VisibilityIcon' is defined but never used.","'StayPrimaryLandscape' is defined but never used.","'createMuiTheme' is defined but never used.","'colors' is defined but never used.","'makeStyles' is defined but never used.","'Badge' is defined but never used.","'StyledTableRow' is assigned a value but never used.","'Pagination' is defined but never used.","'DeleteIcon' is defined but never used.","'AlarmIcon' is defined but never used.","'renderLineChart' is assigned a value but never used.","'renderLineChart2' is assigned a value but never used.","'renderLineChart3' is assigned a value but never used.","'renderLineChart4' is assigned a value but never used.","'renderLineChart5' is assigned a value but never used.","'renderLineChart6' is assigned a value but never used.","'styleObjCharts2' is assigned a value but never used.","'fabStyle' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'Button' is defined but never used.",["224"],["225"],"'LeafletMap' is defined but never used.","'greenOptions' is assigned a value but never used.","'ContactsOutlined' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]